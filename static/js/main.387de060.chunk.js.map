{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/Container/Container.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","components/Searchbar/Searchbar.module.css","components/Container/Container.js","services/picture-api.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","components/Button/Button.js","components/Loader/Loader.js","App.js","index.js"],"names":["module","exports","Container","children","className","s","axios","defaults","baseURL","fetchImages","a","pictureSearch","page","get","then","data","hits","propTypes","PropTypes","string","isRequired","number","Searchbar","onSubmit","useState","query","setQuery","event","preventDefault","trim","toast","error","SearchForm","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","name","value","onChange","target","toLowerCase","autoComplete","autoFocus","placeholder","ImageGalleryItem","src","tags","largeImageURL","onSetImageData","alt","ImageGalleryItemImage","onClick","ImageGallery","picture","setImageData","map","index","webformatURL","modalRoot","document","querySelector","Modal","onClose","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","Overlay","currentTarget","Button","onLoadMore","LoaderSpinner","Loader","color","height","width","timeout","Status","App","setPictureSearch","setPage","setPicture","setLargeImageURL","setTags","setError","status","setStatus","pictures","length","info","prevState","scrollToBottom","scrollTo","top","documentElement","scrollHeight","behavior","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.387de060.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__35498\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__1Euv0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1xRjb\",\"Modal\":\"Modal_Modal__NJxJk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__syArW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__23AXw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1p0Ab\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__3yOBW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchForm\":\"Searchbar_SearchForm__3JBV6\",\"SearchFormButton\":\"Searchbar_SearchFormButton__1-5up\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__2gemD\",\"SearchFormInput\":\"Searchbar_SearchFormInput__3owjI\",\"Searchbar\":\"Searchbar_Searchbar__2c73_\"};","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={s.Container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import axios from \"axios\";\nimport PropTypes from \"prop-types\";\n\nconst apiKey = \"18692705-ed4727d48f1212ef902c664a7\";\naxios.defaults.baseURL = \"https://pixabay.com/api\";\n\nconst fetchImages = async ({ pictureSearch, page }) => {\n  return await axios\n    .get(\n      `/?key=${apiKey}&q=${pictureSearch}&image_type=photo&orientation=horizontal&per_page=12&page=${page}`\n    )\n    .then(({ data }) => data.hits);\n};\n\nfetchImages.propTypes = {\n  pictureSearch: PropTypes.string.isRequired,\n  page: PropTypes.number.isRequired,\n};\n\nexport default fetchImages;\n","import { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Searchbar.module.css\";\n\nfunction Searchbar({ onSubmit }) {\n  const [query, setQuery] = useState(\"\");\n\n  const handleQueryChange = (event) => {\n    setQuery(event.target.value.toLowerCase());\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (query.trim() === \"\") {\n      return toast.error(\"Enter a name for the picture!\");\n    }\n    onSubmit(query);\n    setQuery(\"\");\n  };\n\n  return (\n    <header className={s.Searchbar}>\n      <form onSubmit={handleSubmit} className={s.SearchForm}>\n        <button type=\"submit\" className={s.SearchFormButton}>\n          <span className={s.SearchFormButtonLabel}>Search</span>\n        </button>\n\n        <input\n          className={s.SearchFormInput}\n          type=\"text\"\n          name=\"pictureName\"\n          value={query}\n          onChange={handleQueryChange}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import PropTypes from \"prop-types\";\n\nimport s from \"./ImageGalleryItem.module.css\";\n\nconst ImageGalleryItem = ({ src, tags, largeImageURL, onSetImageData }) => {\n  return (\n    <li className={s.ImageGalleryItem}>\n      <img\n        src={src}\n        alt={tags}\n        className={s.ImageGalleryItemImage}\n        onClick={() => {\n          onSetImageData({ largeImageURL, tags });\n        }}\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  src: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  tags: PropTypes.string,\n  onSetImageData: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import s from \"./ImageGallery.module.css\";\nimport ImageGalleryItem from \"../ImageGalleryItem\";\n\nconst ImageGallery = ({ picture, setImageData }) => {\n  return (\n    <ul className={s.ImageGallery}>\n      {picture.map(({ webformatURL, largeImageURL, tags }, index) => (\n        <ImageGalleryItem\n          onSetImageData={setImageData}\n          key={index}\n          src={webformatURL}\n          largeImageURL={largeImageURL}\n          tags={tags}\n        />\n      ))}\n    </ul>\n  );\n};\nexport default ImageGallery;\n","import { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createPortal } from \"react-dom\";\nimport s from \"./Modal.module.css\";\n\nconst modalRoot = document.querySelector(\"#modal-root\");\n\nexport default function Modal({ onClose, children }) {\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  });\n\n  const handleKeyDown = (event) => {\n    if (event.code === \"Escape\") {\n      onClose();\n    }\n  };\n\n  const handleBackdropClick = (event) => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className={s.Overlay} onClick={handleBackdropClick}>\n      <div className={s.Modal}>{children}</div>\n    </div>,\n    modalRoot\n  );\n}\n\nModal.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport s from \"./Button.module.css\";\n\nconst Button = ({ onLoadMore }) => {\n  return (\n    <button onClick={() => onLoadMore()} type=\"button\" className={s.Button}>\n      Load more\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onLoadMore: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import Loader from \"react-loader-spinner\";\n\nimport s from \"./Loader.module.css\";\nexport default function LoaderSpinner() {\n  return (\n    <Loader\n      className={s.Loader}\n      type=\"Puff\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n      timeout={3000}\n    />\n  );\n}\n","import { useState, useEffect } from \"react\";\n\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport Container from \"./components/Container\";\nimport fetchImages from \"./services/picture-api\";\nimport Searchbar from \"./components/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport Modal from \"./components/Modal\";\nimport Button from \"./components/Button\";\nimport LoaderSpinner from \"./components/Loader\";\n\nconst Status = {\n  IDLE: \"idle\",\n  PENDING: \"pending\",\n  RESOLVED: \"resolved\",\n  REJECTED: \"rejected\",\n};\n\nexport default function App() {\n  const [pictureSearch, setPictureSearch] = useState(\"mountain\");\n  const [page, setPage] = useState(1);\n  const [picture, setPicture] = useState([]);\n  const [largeImageURL, setLargeImageURL] = useState(null);\n  const [tags, setTags] = useState(null);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n    (async () => {\n      try {\n        const pictures = await fetchImages({ pictureSearch, page });\n\n        if (pictures.length < 1) {\n          toast.info(\"Not found!\");\n          setError(true);\n          setStatus(Status.REJECTED);\n          return;\n        }\n\n        setPicture((prevState) => [...prevState, ...pictures]);\n        setStatus(Status.RESOLVED);\n        if (page !== 1) {\n          scrollToBottom();\n        }\n      } catch (error) {\n        setError(error);\n        setStatus(Status.REJECTED);\n      }\n    })();\n  }, [pictureSearch, page]);\n\n  const scrollToBottom = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  const handleFormSubmit = (query) => {\n    if (pictureSearch === query) {\n      return;\n    }\n    setPicture([]);\n    setPage(1);\n    setError(false);\n    setPictureSearch(query);\n  };\n\n  const setImageData = ({ largeImageURL, tags }) => {\n    setLargeImageURL(largeImageURL);\n    setTags(tags);\n  };\n\n  const toggleModal = () => {\n    setLargeImageURL(\"\");\n  };\n\n  const handleLoadMore = () => {\n    setPage((prevState) => prevState + 1);\n  };\n\n  return (\n    <Container>\n      <Searchbar onSubmit={handleFormSubmit} />\n      {status === Status.REJECTED && error && (\n        <p>Whoops, something went wrong </p>\n      )}\n      {status === Status.PENDING && <LoaderSpinner />}\n      <ImageGallery picture={picture} setImageData={setImageData} />\n      {picture.length > 0 && status === Status.RESOLVED && (\n        <Button onLoadMore={handleLoadMore} />\n      )}\n\n      {largeImageURL && (\n        <Modal onClose={toggleModal}>\n          <img src={largeImageURL} alt={tags} />\n        </Modal>\n      )}\n      <ToastContainer autoClose={3000} />\n    </Container>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}